{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useMousePosition } from './useMousePosition';\nexport const useEyeTracking = () => {\n  _s();\n  const mousePosition = useMousePosition();\n  const [eyePosition, setEyePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const avatarRef = useRef(null);\n  useEffect(() => {\n    if (avatarRef.current) {\n      const avatarRect = avatarRef.current.getBoundingClientRect();\n      const avatarCenterX = avatarRect.left + avatarRect.width / 2;\n      const avatarCenterY = avatarRect.top + avatarRect.height / 2;\n\n      // Calculate the angle between cursor and avatar center\n      const deltaX = mousePosition.x - avatarCenterX;\n      const deltaY = mousePosition.y - avatarCenterY;\n\n      // Limit eye movement to a realistic range\n      const maxMovement = 15;\n      const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n      const normalizedX = distance > 0 ? deltaX / distance * Math.min(maxMovement, distance / 20) : 0;\n      const normalizedY = distance > 0 ? deltaY / distance * Math.min(maxMovement, distance / 20) : 0;\n      setEyePosition({\n        x: normalizedX,\n        y: normalizedY\n      });\n    }\n  }, [mousePosition]);\n  return {\n    eyePosition,\n    avatarRef\n  };\n};\n_s(useEyeTracking, \"BAIDANQ2jfBRz8P54zJYvJQ6x70=\", false, function () {\n  return [useMousePosition];\n});","map":{"version":3,"names":["useState","useEffect","useRef","useMousePosition","useEyeTracking","_s","mousePosition","eyePosition","setEyePosition","x","y","avatarRef","current","avatarRect","getBoundingClientRect","avatarCenterX","left","width","avatarCenterY","top","height","deltaX","deltaY","maxMovement","distance","Math","sqrt","normalizedX","min","normalizedY"],"sources":["D:/HP/D/portfolio_app/frontend/src/hooks/useEyeTracking.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useMousePosition } from './useMousePosition';\r\n\r\nexport const useEyeTracking = () => {\r\n  const mousePosition = useMousePosition();\r\n  const [eyePosition, setEyePosition] = useState({ x: 0, y: 0 });\r\n  const avatarRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (avatarRef.current) {\r\n      const avatarRect = avatarRef.current.getBoundingClientRect();\r\n      const avatarCenterX = avatarRect.left + avatarRect.width / 2;\r\n      const avatarCenterY = avatarRect.top + avatarRect.height / 2;\r\n\r\n      // Calculate the angle between cursor and avatar center\r\n      const deltaX = mousePosition.x - avatarCenterX;\r\n      const deltaY = mousePosition.y - avatarCenterY;\r\n      \r\n      // Limit eye movement to a realistic range\r\n      const maxMovement = 15;\r\n      const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n      const normalizedX = distance > 0 ? (deltaX / distance) * Math.min(maxMovement, distance / 20) : 0;\r\n      const normalizedY = distance > 0 ? (deltaY / distance) * Math.min(maxMovement, distance / 20) : 0;\r\n\r\n      setEyePosition({\r\n        x: normalizedX,\r\n        y: normalizedY\r\n      });\r\n    }\r\n  }, [mousePosition]);\r\n\r\n  return { eyePosition, avatarRef };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,aAAa,GAAGH,gBAAgB,CAAC,CAAC;EACxC,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC;IAAES,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC9D,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,CAACC,OAAO,EAAE;MACrB,MAAMC,UAAU,GAAGF,SAAS,CAACC,OAAO,CAACE,qBAAqB,CAAC,CAAC;MAC5D,MAAMC,aAAa,GAAGF,UAAU,CAACG,IAAI,GAAGH,UAAU,CAACI,KAAK,GAAG,CAAC;MAC5D,MAAMC,aAAa,GAAGL,UAAU,CAACM,GAAG,GAAGN,UAAU,CAACO,MAAM,GAAG,CAAC;;MAE5D;MACA,MAAMC,MAAM,GAAGf,aAAa,CAACG,CAAC,GAAGM,aAAa;MAC9C,MAAMO,MAAM,GAAGhB,aAAa,CAACI,CAAC,GAAGQ,aAAa;;MAE9C;MACA,MAAMK,WAAW,GAAG,EAAE;MACtB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACL,MAAM,GAAGA,MAAM,GAAGC,MAAM,GAAGA,MAAM,CAAC;MAC7D,MAAMK,WAAW,GAAGH,QAAQ,GAAG,CAAC,GAAIH,MAAM,GAAGG,QAAQ,GAAIC,IAAI,CAACG,GAAG,CAACL,WAAW,EAAEC,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC;MACjG,MAAMK,WAAW,GAAGL,QAAQ,GAAG,CAAC,GAAIF,MAAM,GAAGE,QAAQ,GAAIC,IAAI,CAACG,GAAG,CAACL,WAAW,EAAEC,QAAQ,GAAG,EAAE,CAAC,GAAG,CAAC;MAEjGhB,cAAc,CAAC;QACbC,CAAC,EAAEkB,WAAW;QACdjB,CAAC,EAAEmB;MACL,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACvB,aAAa,CAAC,CAAC;EAEnB,OAAO;IAAEC,WAAW;IAAEI;EAAU,CAAC;AACnC,CAAC;AAACN,EAAA,CA7BWD,cAAc;EAAA,QACHD,gBAAgB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}