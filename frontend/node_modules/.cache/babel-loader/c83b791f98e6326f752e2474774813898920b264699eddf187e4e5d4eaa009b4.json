{"ast":null,"code":"import{useState,useEffect,useRef}from'react';import{useMousePosition}from'./useMousePosition';export const useEyeTracking=()=>{const mousePosition=useMousePosition();const[eyePosition,setEyePosition]=useState({x:0,y:0});const avatarRef=useRef(null);useEffect(()=>{if(avatarRef.current){const avatarRect=avatarRef.current.getBoundingClientRect();const avatarCenterX=avatarRect.left+avatarRect.width/2;const avatarCenterY=avatarRect.top+avatarRect.height/2;// Calculate the angle between cursor and avatar center\nconst deltaX=mousePosition.x-avatarCenterX;const deltaY=mousePosition.y-avatarCenterY;// Limit eye movement to a realistic range\nconst maxMovement=15;const distance=Math.sqrt(deltaX*deltaX+deltaY*deltaY);const normalizedX=distance>0?deltaX/distance*Math.min(maxMovement,distance/20):0;const normalizedY=distance>0?deltaY/distance*Math.min(maxMovement,distance/20):0;setEyePosition({x:normalizedX,y:normalizedY});}},[mousePosition]);return{eyePosition,avatarRef};};","map":{"version":3,"names":["useState","useEffect","useRef","useMousePosition","useEyeTracking","mousePosition","eyePosition","setEyePosition","x","y","avatarRef","current","avatarRect","getBoundingClientRect","avatarCenterX","left","width","avatarCenterY","top","height","deltaX","deltaY","maxMovement","distance","Math","sqrt","normalizedX","min","normalizedY"],"sources":["D:/HP/D/portfolio_app/frontend/src/hooks/useEyeTracking.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useMousePosition } from './useMousePosition';\r\n\r\nexport const useEyeTracking = () => {\r\n  const mousePosition = useMousePosition();\r\n  const [eyePosition, setEyePosition] = useState({ x: 0, y: 0 });\r\n  const avatarRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (avatarRef.current) {\r\n      const avatarRect = avatarRef.current.getBoundingClientRect();\r\n      const avatarCenterX = avatarRect.left + avatarRect.width / 2;\r\n      const avatarCenterY = avatarRect.top + avatarRect.height / 2;\r\n\r\n      // Calculate the angle between cursor and avatar center\r\n      const deltaX = mousePosition.x - avatarCenterX;\r\n      const deltaY = mousePosition.y - avatarCenterY;\r\n      \r\n      // Limit eye movement to a realistic range\r\n      const maxMovement = 15;\r\n      const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n      const normalizedX = distance > 0 ? (deltaX / distance) * Math.min(maxMovement, distance / 20) : 0;\r\n      const normalizedY = distance > 0 ? (deltaY / distance) * Math.min(maxMovement, distance / 20) : 0;\r\n\r\n      setEyePosition({\r\n        x: normalizedX,\r\n        y: normalizedY\r\n      });\r\n    }\r\n  }, [mousePosition]);\r\n\r\n  return { eyePosition, avatarRef };\r\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACnD,OAASC,gBAAgB,KAAQ,oBAAoB,CAErD,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,KAAM,CAAAC,aAAa,CAAGF,gBAAgB,CAAC,CAAC,CACxC,KAAM,CAACG,WAAW,CAAEC,cAAc,CAAC,CAAGP,QAAQ,CAAC,CAAEQ,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAAC,CAC9D,KAAM,CAAAC,SAAS,CAAGR,MAAM,CAAC,IAAI,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,GAAIS,SAAS,CAACC,OAAO,CAAE,CACrB,KAAM,CAAAC,UAAU,CAAGF,SAAS,CAACC,OAAO,CAACE,qBAAqB,CAAC,CAAC,CAC5D,KAAM,CAAAC,aAAa,CAAGF,UAAU,CAACG,IAAI,CAAGH,UAAU,CAACI,KAAK,CAAG,CAAC,CAC5D,KAAM,CAAAC,aAAa,CAAGL,UAAU,CAACM,GAAG,CAAGN,UAAU,CAACO,MAAM,CAAG,CAAC,CAE5D;AACA,KAAM,CAAAC,MAAM,CAAGf,aAAa,CAACG,CAAC,CAAGM,aAAa,CAC9C,KAAM,CAAAO,MAAM,CAAGhB,aAAa,CAACI,CAAC,CAAGQ,aAAa,CAE9C;AACA,KAAM,CAAAK,WAAW,CAAG,EAAE,CACtB,KAAM,CAAAC,QAAQ,CAAGC,IAAI,CAACC,IAAI,CAACL,MAAM,CAAGA,MAAM,CAAGC,MAAM,CAAGA,MAAM,CAAC,CAC7D,KAAM,CAAAK,WAAW,CAAGH,QAAQ,CAAG,CAAC,CAAIH,MAAM,CAAGG,QAAQ,CAAIC,IAAI,CAACG,GAAG,CAACL,WAAW,CAAEC,QAAQ,CAAG,EAAE,CAAC,CAAG,CAAC,CACjG,KAAM,CAAAK,WAAW,CAAGL,QAAQ,CAAG,CAAC,CAAIF,MAAM,CAAGE,QAAQ,CAAIC,IAAI,CAACG,GAAG,CAACL,WAAW,CAAEC,QAAQ,CAAG,EAAE,CAAC,CAAG,CAAC,CAEjGhB,cAAc,CAAC,CACbC,CAAC,CAAEkB,WAAW,CACdjB,CAAC,CAAEmB,WACL,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACvB,aAAa,CAAC,CAAC,CAEnB,MAAO,CAAEC,WAAW,CAAEI,SAAU,CAAC,CACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}